/**************************************
** EDITOR
***************************************/

:host,
atom-text-editor {
    color: @syntax-text-color;
    background-color: @syntax-background-color;
}

:host .wrap-guide,
atom-text-editor .wrap-guide {
    background-color: @syntax-wrap-guide-color;
}

:host .indent-guide,
atom-text-editor .indent-guide {
    color: @syntax-indent-guide-color;
}

:host .gutter,
atom-text-editor .gutter {
    color: @syntax-gutter-text-color;
    background-color: @syntax-gutter-background-color;
}

:host .gutter .line-number.cursor-line,
atom-text-editor .gutter .line-number.cursor-line {
    color: @syntax-gutter-text-color-selected;
    background-color: @syntax-gutter-background-color-selected;
}

:host .gutter .line-number.cursor-line-no-selection,
atom-text-editor .gutter .line-number.cursor-line-no-selection {
    color: @syntax-gutter-text-color-selected;
}

:host .invisible,
atom-text-editor .invisible {
    color: @syntax-text-color;
}

:host .invisible-character,
atom-text-editor .invisible-character {
    color: @syntax-invisible-character-color;
}

:host .cursor,
atom-text-editor .cursor {
    color: @syntax-cursor-color;
}

:host .selection .region,
atom-text-editor .selection .region {
    background-color: @syntax-selection-color;
}

.bracket-matcher .region {
    border-bottom: none;
    background: @ui-selection;
}

/**************************************
** ALL LANGUAGES
***************************************/

.comment {
    color: @all-comment;
}

.variable,
.support.type.object {
    color: @all-variable;
}

.keyword {
    color: @all-keyword;
}

.keyword.operator {
    color: @all-keyword-operator;
}

.keyword.operator.new {
    color: @all-keyword-new;
}

.keyword.other.unit {
    color: @all-keyword-unit;
}

.storage {
    color: @all-keyword-storage;
}

.constant.language,
.variable.this {
    color: @all-constant-language;
}

.constant.numeric {
    color: @all-constant-numeric;
}

.constant.color,
.constant.rgb-value {
    color: @all-constant-color;
}

.string.quoted,
.string.definition.begin,
.string.definition.end {
    color: @all-constant-string;
}

.string.regexp,
.string.regexp > .keyword,
.string.regexp > .punctuation {
    color: @all-constant-regexp;
}

.punctuation.definition.comment {
    color: @all-comment;
}

.punctuation.separator {
    color: @ui-text;
}

.entity.name.type {
    color: @all-keyword-type;
}

.name.type.class {
    color: @all-type-class;
}

.entity.name.class {
    color: @ui-text;
}

.entity.name.function, .support.function, .function.arrow {
    color: @all-function;
}

.object.key {
    color: @all-key;
}

.meta.class {
    color: @ui-text;
}

.meta.require {
    color: @all-keyword;
}

.bold {
    font-style: bold;
}

.italic {
    font-style: italic;
}

.none {
    color: @ui-text;
}

.invalid.illegal,
.invalid.broken,
.invalid.deprecated,
.invalid.unimplemented {
    color: @all-error;
}

/**************************************
** MARKUP
***************************************/

.entity.name.tag {
    color: @markup-tag;
}

.entity.other.attribute-name {
    color: @markup-attribute;
}

.meta.tag {
    color: @markup-punctuation;
}

.meta.separator {
    color: @markup-punctuation;
}

/**************************************
** CSS
***************************************/

.css .keyword.control {
    color: @all-keyword;
}

.css .entity.other.attribute-name,
.css .selector .entity {
    color: @css-selector;
}

.css .property-name {
    color: @css-property;
}

/**************************************
** MARKDOWN
***************************************/

.source.gfm .markup.heading {
    color: @markdown-heading;
}
